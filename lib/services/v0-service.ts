// lib/services/v0-service.ts
export interface V0Result {
  name: string;
  code: string;
  id: string;
}

export class V0Service {
  static async generate(prompt: string): Promise<V0Result> {
    try {
      // Mock V0 API call - replace with actual V0 integration
      const response = await fetch('/api/v0/generate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });

      if (!response.ok) {
        throw new Error(`V0 API error: ${response.statusText}`);
      }

      const result = await response.json();
      
      return {
        name: result.name || 'GeneratedComponent',
        code: result.code || '',
        id: result.id || Date.now().toString(),
      };
    } catch (error) {
      console.error('V0 generation error:', error);
      
      // Fallback mock response for development
      return {
        name: 'MockComponent',
        code: `
'use client';

import React from 'react';

export default function MockComponent() {
  return (
    <div className="p-4 bg-green-50 rounded-lg">
      <h2 className="text-xl font-semibold text-green-800">
        Generated from prompt: ${prompt}
      </h2>
      <p className="text-green-600 mt-2">
        This is a mock component generated by V0 service.
      </p>
    </div>
  );
}
        `,
        id: Date.now().toString(),
      };
    }
  }
}
